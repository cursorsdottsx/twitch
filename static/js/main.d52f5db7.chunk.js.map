{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","data","setData","useEffect","a","fetch","window","location","host","json","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMA2Ee,SAASA,IAAO,IAAD,EACFC,qBADE,mBACnBC,EADmB,KACbC,EADa,KAe1B,OAZAC,qBAAU,WACN,sBAAC,4BAAAC,EAAA,sEAEaC,MAA+B,4BAAzBC,OAAOC,SAASC,KAAhB,kCAFnB,8BAGKC,OAHL,OACSA,EADT,OAKGP,EAAQO,GALX,0CAAD,KAOD,IAEHC,QAAQC,IAAIV,GAEL,wB,MCrFXW,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACf,EAAD,MAEJgB,SAASC,eAAe,W","file":"static/js/main.d52f5db7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\ninterface Meta {\n    line: number;\n    file: string;\n    path: string;\n}\n\ntype Type = string[][];\n\ninterface Param {\n    name: string;\n    description: string;\n    type: Type;\n}\n\ninterface Data {\n    classes: {\n        abstract?: boolean;\n        name: string;\n        description: string;\n        construct: {\n            name: string;\n            description: string;\n            params?: Param[];\n        };\n        props?: {\n            name: string;\n            description: string;\n            type: Type;\n            readonly?: boolean;\n            meta: Meta;\n        }[];\n        methods?: {\n            name: string;\n            description: string;\n            meta: Meta;\n            params?: Param[];\n            access?: string;\n            examples?: string[];\n            returns?: Type;\n        }[];\n        events?: {\n            name: string;\n            description: string;\n            params?: Param[];\n            meta: Meta;\n        }[];\n        meta: Meta;\n    }[];\n    externals: {\n        name: string;\n        description: string;\n        meta: Meta;\n        see: string;\n    }[];\n    interfaces: [];\n    typedefs: {\n        name: string;\n        description: string;\n        meta: Meta;\n        type: Type;\n        props: {\n            name: string;\n            description: string;\n            type: Type;\n        }[];\n    }[];\n    meta: {\n        generator: string;\n        format: number;\n        date: number;\n    };\n}\n\nexport default function App() {\n    const [data, setData] = useState<Data | undefined>();\n\n    useEffect(() => {\n        (async () => {\n            const json = await (\n                await fetch(window.location.host === \"cursorsdottsx.github.io\" ? `/twitch/data.json` : `/data.json`)\n            ).json();\n\n            setData(json);\n        })();\n    }, []);\n\n    console.log(data);\n\n    return <div></div>;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./style.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}