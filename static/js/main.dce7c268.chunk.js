(this.webpackJsonpdocs=this.webpackJsonpdocs||[]).push([[0],{10:function(e){e.exports=JSON.parse('{"index":"<p><img src=\\"./assets/twitchx.png\\" alt=\\"Banner\\" /></p>\\n<div align=\\"center\\">\\n    <h1>twitchx</h1>\\n    <p style=\\"margin: 0.5rem 0;\\">Super-powered TypeScript Twitch REST API wrapper.</p>\\n    <img style=\\"display: inline-block; margin: 0.25rem;\\" src=\\"https://forthebadge.com/images/badges/fuck-it-ship-it.svg\\" />\\n    <img style=\\"display: inline-block; margin: 0.25rem;\\" src=\\"https://forthebadge.com/images/badges/made-with-typescript.svg\\" />\\n    <img style=\\"display: inline-block; margin: 0.25rem;\\" src=\\"https://forthebadge.com/images/badges/powered-by-black-magic.svg\\" />\\n    <img style=\\"display: inline-block; margin: 0.25rem;\\" src=\\"https://forthebadge.com/images/badges/60-percent-of-the-time-works-every-time.svg\\" />\\n    <img style=\\"display: inline-block; margin: 0.25rem;\\" src=\\"https://forthebadge.com/images/badges/fixed-bugs.svg\\" />\\n</div>\\n<h1>About</h1>\\n<blockquote>\\n<p><strong>twitchx</strong> is a versatile <a href=\\"http://nodejs.org/\\">Node.js</a> library that lets you use the Twitch API with little overhead.\\nWritten completely in TypeScript with accurate typings, thoroughly maintained and tested to bring you the best developer experience.\\nIt\'s versatile, performant, and lightweight, with few depedencies. Zero overhead, full potential.</p>\\n</blockquote>\\n<ul>\\n<li>Object-oriented</li>\\n<li>Low overhead</li>\\n<li>Fast</li>\\n<li>API like <a href=\\"https://www.npmjs.com/package/discord.js\\">discord.js</a></li>\\n<li>99.99% coverage</li>\\n<li>Extremely lightweight</li>\\n</ul>\\n<h1>Installation and Usage</h1>\\n<p><strong>Node.js v14 or newer is required.</strong></p>\\n<pre><code class=\\"language-bash\\"># Install with NPM:\\n$ npm install twitchx\\n\\n# or alternatively, with Yarn:\\n$ yarn add twitchx\\n</code></pre>\\n<pre><code class=\\"language-js\\">// Available with CommonJS:\\nconst Twitch = require(&quot;twitchx&quot;);\\n\\n// or with ESM:\\nimport * as Twitch from &quot;twitchx&quot;;\\n</code></pre>\\n<h1>Example</h1>\\n<pre><code class=\\"language-ts\\">import * as Twitch from &quot;twitchx&quot;;\\n\\n(async () =&gt; {\\n    const client = new Twitch.Client({\\n        clientId: &quot;a-cool-id&quot;,\\n        clientSecret: &quot;dont-steal-pls&quot;,\\n    });\\n\\n    await client.login();\\n\\n    const user = await client.users.fetch(&quot;44445592&quot;);\\n\\n    console.log(user);\\n})();\\n</code></pre>\\n<h1>Links</h1>\\n<ul>\\n<li><a href=\\"https://twitchx.js.org/\\">Website</a></li>\\n<li><a href=\\"https://twitchx.js.org/#/docs\\">Documentation</a></li>\\n<li><a href=\\"https://twitchx.js.org/#/docs/guide\\">Guide</a></li>\\n<li><a href=\\"https://discord.gg/hMzQye6sWU\\">Discord</a></li>\\n<li><a href=\\"https://github.com/cursorsdottsx/twitch\\">GitHub</a></li>\\n<li><a href=\\"https://www.npmjs.com/package/twitchx\\">NPM</a></li>\\n</ul>\\n<h1>Contributing</h1>\\n<p>Before opening an issue or contributing, make sure that it hasn\'t been opened or brought up already, or hasn\'t been done before/is being done.</p>\\n<p>Read <a href=\\"./CONTRIBUTING.md\\">CONTRIBUTING.md</a> for information on contributing.</p>\\n<p>Submit a PR to the GitHub repo and have a collaborator review the changes.</p>\\n<h1>Help</h1>\\n<p>If you don\'t understand something or have trouble creating a feature with <strong>twitchx</strong>, hop in our <a href=\\"https://discord.gg/hMzQye6sWU\\">Discord</a> and ask away!</p>\\n<div style=\\"height: 1rem;\\"></div>\\n","categories":[{"name":"General","pages":[{"name":"Welcome","slug":"welcome","content":"<p><img src=\\"../assets/twitchx.png\\" alt=\\"Banner\\" /></p>\\n<div align=\\"center\\">\\n    <h1>twitchx</h1>\\n    <p style=\\"margin: 0.5rem 0;\\">Super-powered TypeScript Twitch REST API wrapper.</p>\\n    <img style=\\"display: inline-block; margin: 0.25rem;\\" src=\\"https://forthebadge.com/images/badges/fuck-it-ship-it.svg\\" />\\n    <img style=\\"display: inline-block; margin: 0.25rem;\\" src=\\"https://forthebadge.com/images/badges/made-with-typescript.svg\\" />\\n    <img style=\\"display: inline-block; margin: 0.25rem;\\" src=\\"https://forthebadge.com/images/badges/powered-by-black-magic.svg\\" />\\n    <img style=\\"display: inline-block; margin: 0.25rem;\\" src=\\"https://forthebadge.com/images/badges/60-percent-of-the-time-works-every-time.svg\\" />\\n    <img style=\\"display: inline-block; margin: 0.25rem;\\" src=\\"https://forthebadge.com/images/badges/fixed-bugs.svg\\" />\\n</div>\\n<h1>Welcome</h1>\\n<p>Welcome to the <strong>Twitchx</strong> v1 documentation.</p>\\n"},{"name":"Changelog","slug":"changelog","content":"<h1>Changelog</h1>\\n<h3>twitchx v1.0.0 \u2013 <strong>6.16.2021</strong></h3>\\n<p>Initial release.</p>\\n"},{"name":"FAQ","slug":"faq","content":"<h1>Frequently Asked Questions</h1>\\n<p>Encountering challenges with <strong>Twitchx</strong> is difficult. But here are some questions and answers to common questions we get.</p>\\n<h2>How do I login?</h2>\\n"}]}]}')},19:function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return j}));var s=n(4),a=n(5),r=n(7),i=n(46),o=n(12),c=n.n(o),l=n(43),d=n.n(l),p=n(1),m=n(3),h=n(11),u=n(6),f=n(10),g=n(47),y=n(48),b=n(0);function j(t){var n=t.search,o=t.setSearch,l=Object(m.g)().route,j=Object(p.useState)(),x=Object(r.a)(j,2),w=x[0],C=x[1],v=f.categories.flatMap((function(e){var t=e.name;return e.pages.map((function(e){return Object(a.a)({category:t},e)}))})),O=[].concat(Object(s.a)(u.classes.map((function(e){var t=e.name;return{category:"classes",name:t,slug:t.toLowerCase()}}))),Object(s.a)(u.typedefs.map((function(e){var t=e.name;return{category:"typedefs",name:t,slug:t.toLowerCase()}}))),Object(s.a)(u.externals.map((function(e){var t=e.name;return{category:"externals",name:t,slug:t.toLowerCase()}})))),k=new d.a({html:!0,linkify:!0,xhtmlOut:!0});return Object(p.useEffect)((function(){var t={string:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",boolean:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",number:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",object:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",function:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",Array:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",Promise:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",undefined:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined"},n={EventEmitter:"https://nodejs.org/api/all.html#events_class_eventemitter"},r={IDENTIFIER:new RegExp("(".concat(Object(s.a)(O).sort((function(e,t){return t.name.length-e.name.length})).map((function(e){return e.name})).join("|"),")"),"g"),NODEJS:new RegExp("(".concat(Object.keys(n).sort((function(e,t){return t.length-e.length})).join("|"),")"),"g"),NATIVE:new RegExp("(".concat(Object.keys(t).sort((function(e,t){return t.length-e.length})).join("|"),")"),"g")},i=function(e,t){var n=[];return e.flat(2).filter((function(e){return!t||"undefined"!==e})).reduce((function(e,t,s,a){var r,i=null!==(r=a[s+1])&&void 0!==r?r:"";if(i.endsWith(">")){if("undefined"===typeof n.pop())throw new Error("improper generic");return e+t}return i.startsWith("<")?(n.push(!0),e+t):n.length||!e?e+t:e+" | "+t}),"").replace(/\)>/g,">").replace(/<\(/g,"<").replace(/(?<!\s)\|(?!\s)/g," | ").replace(/>(\w)/g,"> | $1").replace(/\s*\|\s*>/,">")},o=function(e){return k.renderInline(e.replace(r.IDENTIFIER,(function(e){return"[".concat(e,"](#/docs/").concat(O.find((function(t){return t.name===e})).category,"/").concat(e,")")})).replace(r.NODEJS,(function(e){return"[".concat(e,"](").concat(n[e],")")})).replace(r.NATIVE,(function(e){return"[".concat(e,"](").concat(t[e],")")})))};C(function(){if(l&&O.find((function(e){var t=e.category,n=e.slug;return l.toLowerCase()==="".concat(t,"/").concat(n).toLowerCase()}))){var e=O.find((function(e){var t=e.category,n=e.slug;return l.toLowerCase()==="".concat(t,"/").concat(n).toLowerCase()})).name,t=u.classes.find((function(t){return t.name===e}))?Object(a.a)(Object(a.a)({},u.classes.find((function(t){return t.name===e}))),{},{type:"class"}):u.typedefs.find((function(t){return t.name===e}))?Object(a.a)(Object(a.a)({},u.typedefs.find((function(t){return t.name===e}))),{},{type:"typedef"}):u.externals.find((function(t){return t.name===e}))?Object(a.a)(Object(a.a)({},u.externals.find((function(t){return t.name===e}))),{},{type:"external"}):void 0;if(t)return"class"===t.type?Object(b.jsx)(g.a,{info:t,applyStyles:o,resolveType:i,md:k}):"typedef"===t.type||"external"===t.type?Object(b.jsx)("div",{className:"markdown",children:Object(b.jsx)("h1",{children:t.name})}):void 0;console.error("error")}}()),e((function(){c.a.configure({languages:["typescript"]}),document.querySelectorAll("pre code").forEach((function(e){c.a.highlightElement(e)}))}))}),[l]),l||"undefined"!==typeof n?l||n?Object(b.jsxs)("div",{className:"flex flex-1",children:[Object(b.jsx)(y.a,{active:l}),Object(b.jsx)("main",{className:"docs flex-1 pl-6 pr-4 py-3 lg:px-4 dark:text-white overflow-y-scroll",style:{maxHeight:"calc(100vh - 3rem)"},children:n?Object(b.jsxs)("div",{children:[Object(b.jsx)("h2",{className:"font-light text-2xl py-1 border-b border-gray-300 dark:border-gray-400 mb-2",children:"Search results"}),Object(b.jsx)("ul",{className:"flex flex-col gap-1",children:new i.a(O,{keys:["name"]}).search(n).map((function(e){var t=e.item;return Object(b.jsxs)("li",{className:"flex items-center gap-2",children:[Object(b.jsx)("span",{className:"text-xl text-purple dark:text-lightPurple select-none",children:{classes:"\ud83c\udd32",typedefs:"\ud83c\udd43",externals:"\ud83c\udd34",interfaces:"\ud83c\udd38",meta:""}[t.category]}),Object(b.jsx)(h.b,{className:"dark:text-gray-100",to:"/docs/".concat(t.category.toLowerCase(),"/").concat(t.slug),onClick:function(){return o("")},children:t.name})]})}))})]}):v.map((function(e){return{category:e.category,slug:e.slug}})).some((function(e){var t=e.category,n=e.slug;return l.toLowerCase()==="".concat(t.toLowerCase(),"/").concat(n).toLowerCase()}))?Object(b.jsx)("div",{className:"markdown",dangerouslySetInnerHTML:{__html:v.find((function(e){var t=e.category,n=e.slug;return l.toLowerCase()==="".concat(t.toLowerCase(),"/").concat(n).toLowerCase()})).content}}):O.some((function(e){var t=e.category,n=e.slug;return l.toLowerCase()==="".concat(t,"/").concat(n).toLowerCase()}))?w:Object(b.jsx)(m.a,{to:"/docs/general/welcome"})})]}):null:Object(b.jsx)(m.a,{to:"/docs/general/welcome"})}}).call(this,n(53).setImmediate)},336:function(e,t,n){},337:function(e,t,n){"use strict";n.r(t);var s=n(1),a=n.n(s),r=n(42),i=n.n(r),o=n(7),c=n(11),l=n(3),d=n(19),p=n(45),m=n.n(p);var h=function(e){var t=Object(s.useState)(window.innerWidth),n=Object(o.a)(t,2),a=n[0],r=n[1];return Object(s.useEffect)((function(){var t=m()((function(){return r(window.innerWidth)}),e);return window.addEventListener("resize",t),function(){window.removeEventListener("resize",t)}}),[e]),a},u=n(0);function f(e){var t=e.search,n=e.setSearch,a=h(25),r=Object(s.useState)("dark"===localStorage.getItem("twitchx-theme")),i=Object(o.a)(r,2),c=i[0],l=i[1];return Object(s.useEffect)((function(){localStorage.setItem("twitchx-theme",c?"dark":"light")}),[c]),Object(u.jsx)("div",{className:"h-12 px-4 py-2 grid place-items-center shadow dark:bg-purple z-50",children:Object(u.jsxs)("header",{className:"flex items-center justify-between w-full max-w-6xl",children:[Object(u.jsxs)("nav",{className:"flex items-center gap-4 sm:gap-8",children:[a>440?Object(u.jsx)("h1",{className:"text-xl sm:text-2xl text-purple select-none cursor-pointer dark:text-white",role:"link",onClick:function(){return window.location.hash="#/"},children:"twitchx"}):void 0,Object(u.jsxs)("div",{className:"flex items-center gap-4 sm:-mb-0.5 mr-4",children:[Object(u.jsx)("a",{className:"cursor-pointer text-gray-700 dark:text-gray-50",href:"#/docs",children:a>640?"documentation":Object(u.jsx)("svg",{className:"fill-current text-gray-400 hover:text-gray-500 dark:text-gray-50 h-5 w-5",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 26 26",children:Object(u.jsx)("path",{d:"M 12.34375 1.09375 C 12.0625 1.109375 11.8125 1.21875 11.625 1.4375 L 1.28125 12.96875 C 1.066406 13.214844 0.535156 14.113281 0.28125 15.28125 C 0.105469 15.773438 0 16.34375 0 17 C 0 20.101563 2.59375 21.34375 2.59375 21.34375 C 2.632813 21.367188 2.675781 21.386719 2.71875 21.40625 L 14.71875 24.96875 C 15.109375 25.082031 15.53125 24.945313 15.78125 24.625 L 25.5625 12.84375 C 25.804688 12.542969 25.855469 12.128906 25.6875 11.78125 C 25.6875 11.78125 25.308594 10.90625 25.71875 9.90625 C 25.855469 9.574219 25.804688 9.195313 25.585938 8.910156 C 25.367188 8.625 25.011719 8.480469 24.65625 8.53125 C 24.304688 8.585938 24.003906 8.824219 23.875 9.15625 C 23.363281 10.410156 23.511719 11.363281 23.6875 11.96875 L 14.65625 22.84375 L 3.34375 19.5 L 3.28125 19.46875 C 3.09375 19.398438 2 18.90625 2 17 C 2 16.25 2.160156 15.851563 2.3125 15.625 C 2.464844 15.398438 2.625 15.289063 2.84375 15.21875 C 3.0625 15.148438 3.3125 15.148438 3.5 15.15625 L 3.53125 15.15625 L 13.96875 18.15625 C 14.058594 18.179688 14.160156 18.1875 14.25 18.1875 C 14.5625 18.1875 14.863281 18.027344 15.0625 17.78125 L 25.65625 5.5625 C 25.886719 5.28125 25.964844 4.90625 25.84375 4.5625 C 25.726563 4.214844 25.417969 3.953125 25.0625 3.875 L 12.625 1.09375 C 12.53125 1.074219 12.4375 1.089844 12.34375 1.09375 Z M 12.0625 5.0625 C 12.171875 5.058594 12.273438 5.070313 12.375 5.09375 L 19.8125 6.90625 C 20.21875 7.003906 20.375 7.269531 20.15625 7.53125 L 19.34375 8.5 C 19.121094 8.761719 18.597656 8.878906 18.1875 8.78125 L 10.78125 6.96875 C 10.371094 6.871094 10.21875 6.570313 10.4375 6.3125 L 11.21875 5.375 C 11.382813 5.179688 11.734375 5.070313 12.0625 5.0625 Z"})})}),Object(u.jsx)("a",{className:"cursor-pointer text-gray-700 dark:text-gray-50",href:"https://github.com/cursorsdottsx/twitch",children:a>640?"github":Object(u.jsx)("svg",{className:"fill-current text-gray-400 hover:text-gray-500 dark:text-gray-50 h-5 w-5",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",children:Object(u.jsx)("path",{d:"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"})})})]})]}),Object(u.jsxs)("nav",{className:"flex items-center gap-4",children:[Object(u.jsx)("button",{"aria-label":"toggle theme",className:"outline-none focus:outline-none",onClick:function(){var e;null===(e=document.querySelector("html"))||void 0===e||e.classList.toggle("dark"),l(!c)},children:c?Object(u.jsx)("svg",{width:"1.2em",height:"1.2em",preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 24 24",className:"fill-current text-gray-100 hover:text-white h-6 w-6","aria-hidden":"true",children:Object(u.jsx)("g",{fill:"none",children:Object(u.jsx)("path",{d:"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 1 1-8 0a4 4 0 0 1 8 0z",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})})}):Object(u.jsx)("svg",{width:"1.2em",height:"1.2em",preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 24 24",className:"fill-current text-gray-300 hover:text-gray-400 h-6 w-6","aria-hidden":"true",children:Object(u.jsx)("g",{fill:"none",children:Object(u.jsx)("path",{d:"M20.354 15.354A9 9 0 0 1 8.646 3.646A9.003 9.003 0 0 0 12 21a9.003 9.003 0 0 0 8.354-5.646z",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})})})}),Object(u.jsxs)("div",{className:"relative flex items-center",children:[Object(u.jsx)("svg",{preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 24 24",className:"absolute left-1.5 h-5 w-5 text-gray-300 dark:text-gray-200",children:Object(u.jsx)("g",{fill:"none",children:Object(u.jsx)("path",{d:"M21 21l-6-6m2-5a7 7 0 1 1-14 0a7 7 0 0 1 14 0z",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})})}),Object(u.jsx)("input",{className:"pl-8 pr-1.5 py-1 w-52 sm:w-64 lg:w-96 text-sm border border-gray-200 rounded-sm outline-none focus:outline-none focus:border-gray-300 dark:bg-lightPurple dark:border-transparent dark:text-white",autoCapitalize:"false",autoComplete:"off",autoCorrect:"off",type:"text",name:"search",value:t,onChange:function(e){if(n(e.target.value),e.target.value&&!window.location.hash.startsWith("#/search"))localStorage.setItem("twitchx-last",window.location.hash);else if(!e.target.value){var t;return void(window.location.hash=null!==(t=localStorage.getItem("twitchx-last"))&&void 0!==t?t:"ERROR")}window.location.hash="#/search?query=".concat(e.target.value)}}),Object(u.jsx)("label",{className:"sr-only",htmlFor:"search",children:"search documentation"})]})]})]})})}var g=n(12),y=n.n(g),b=n(10);function j(){return Object(s.useEffect)((function(){y.a.configure({languages:["typescript"]}),document.querySelectorAll("pre code").forEach((function(e){y.a.highlightElement(e)}))}),[]),Object(u.jsx)("div",{className:"dark:text-white markdown w-full px-4 lg:px-0 py-3",dangerouslySetInnerHTML:{__html:b.index}})}function x(){var e=Object(s.useState)(""),t=Object(o.a)(e,2),n=t[0],a=t[1];return Object(u.jsxs)("div",{className:"app flex flex-col min-h-screen dark:bg-dark",children:[Object(u.jsx)(f,{search:n,setSearch:a}),Object(u.jsx)("div",{className:"content flex flex-1 justify-center overflow-y-scroll",style:{maxHeight:"calc(100vh - 3rem)"},children:Object(u.jsx)("main",{className:"flex w-full max-w-6xl",children:Object(u.jsx)(c.a,{basename:".",children:Object(u.jsxs)(l.d,{children:[Object(u.jsx)(l.b,{path:"/",exact:!0,component:j}),Object(u.jsx)(l.b,{path:"/docs",exact:!0,render:function(){return Object(u.jsx)(d.a,{search:n,setSearch:a})}}),Object(u.jsx)(l.b,{path:"/docs/:route+",render:function(){return Object(u.jsx)(d.a,{search:n,setSearch:a})}}),Object(u.jsx)(l.b,{path:"/search",render:function(){return Object(u.jsx)(d.a,{search:n,setSearch:a})}}),Object(u.jsx)(l.b,{path:"/",render:function(){return Object(u.jsx)("div",{children:"404"})}})]})})})})]})}var w=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function C(e,t){navigator.serviceWorker.register(e).then((function(e){e.onupdatefound=function(){var n=e.installing;null!=n&&(n.onstatechange=function(){"installed"===n.state&&(navigator.serviceWorker.controller?t&&t.onUpdate&&t.onUpdate(e):t&&t.onSuccess&&t.onSuccess(e))})}})).catch((function(e){console.error("Error during service worker registration:",e)}))}n(336);i.a.render(Object(u.jsx)(a.a.StrictMode,{children:Object(u.jsx)(x,{})}),document.getElementById("root")),function(e){if("serviceWorker"in navigator){if(new URL(".",window.location.href).origin!==window.location.origin)return;window.addEventListener("load",(function(){var t="".concat(".","/service-worker.js");w?(!function(e,t){fetch(e,{headers:{"Service-Worker":"script"}}).then((function(n){var s=n.headers.get("content-type");404===n.status||null!=s&&-1===s.indexOf("javascript")?navigator.serviceWorker.ready.then((function(e){e.unregister().then((function(){window.location.reload()}))})):C(e,t)})).catch()}(t,e),navigator.serviceWorker.ready.then()):C(t,e)}))}}()},47:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var s=n(4);function a(e){var t;/\?scrollTo=.+$/.test(window.location.hash)&&(null===(t=/\?scrollTo=(.+)$/.exec(window.location.hash))||void 0===t?void 0:t[0])===e.toLowerCase()||(window.location.hash=window.location.hash.split("?")[0]+"?scrollTo=".concat(e.toLowerCase()))}var r=n(0);function i(e){var t=e.info,n=e.applyStyles,i=e.resolveType,o=e.md;return Object(r.jsxs)("div",{className:"markdown",children:[Object(r.jsxs)("h1",{className:"flex flex-col justify-between",children:[t.abstract&&Object(r.jsx)("span",{className:"text-sm",children:"abstract"}),Object(r.jsx)("span",{children:t.name}),t.extends&&Object(r.jsx)("span",{className:"text-base",dangerouslySetInnerHTML:{__html:"extends ".concat(n(i(t.extends)))}})]}),Object(r.jsx)("p",{children:t.description}),Object(r.jsx)("h2",{children:"Constructor"}),Object(r.jsx)("pre",{children:Object(r.jsx)("code",{className:"hljs code-javascript",children:"new Twitch.".concat(t.name,"(").concat(t.construct.params?t.construct.params.map((function(e){var t=e.name;return e.type.flat(2).includes("undefined")?t+"?":t})).join(", "):"",")")})}),Object(r.jsx)("p",{children:t.construct.description}),t.construct.params.length&&Object(r.jsxs)("div",{className:"flex flex-col border border-gray-300 dark:border-gray-700",children:[Object(r.jsxs)("div",{className:"flex",children:[Object(r.jsx)("div",{className:"bg-purple text-white text-sm sm:text-base w-32 sm:w-40 py-1 px-1.5 flex items-center flex-shrink-0 border border-gray-300 dark:border-gray-700",children:"Parameter"}),Object(r.jsx)("div",{className:"bg-purple text-white text-sm sm:text-base w-40 sm:w-52 py-1 px-1.5 flex items-center flex-shrink-0 border border-gray-300 dark:border-gray-700",children:"Type"}),Object(r.jsx)("div",{className:"bg-purple text-white text-sm sm:text-base flex-1 py-1 px-1.5 flex items-center border border-gray-300 dark:border-gray-700",children:"Description"})]}),t.construct.params.map((function(e){return Object(r.jsxs)("div",{className:"flex",children:[Object(r.jsx)("div",{className:"w-32 sm:w-40 py-1 px-1.5 flex items-center font-mono text-xs sm:text-sm flex-shrink-0 border border-gray-300 dark:border-gray-700",children:e.name}),Object(r.jsx)("div",{className:"w-40 sm:w-52 py-1 px-1.5 flex text-sm sm:text-base items-center flex-shrink-0 border border-gray-300 dark:border-gray-700",dangerouslySetInnerHTML:{__html:n(i(e.type))}}),Object(r.jsx)("div",{className:"flex-1 py-1 px-1.5 text-sm sm:text-base flex items-center border border-gray-300 dark:border-gray-700",children:e.description})]},e.name)}))]}),t.props&&Object(r.jsxs)("div",{children:[Object(r.jsx)("h2",{children:"Properties"}),Object(r.jsx)("div",{className:"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4",children:Object(s.a)(t.props).sort((function(e,t){return e.name>t.name?1:-1})).map((function(e){return Object(r.jsx)("div",{children:Object(r.jsxs)("a",{className:"cursor-pointer",onClick:function(){return a(e.name)},children:[e.name,e.readonly&&" \ud83c\udd41"]})},e.name)}))})]}),t.methods&&Object(r.jsxs)("div",{children:[Object(r.jsx)("h2",{children:"Methods"}),Object(r.jsx)("div",{className:"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4",children:Object(s.a)(t.methods).sort((function(e,t){return e.name>t.name?1:-1})).map((function(e){return Object(r.jsx)("div",{children:Object(r.jsxs)("a",{className:"cursor-pointer",onClick:function(){return a(e.name)},children:[e.name,"private"===e.access&&" \ud83c\udd3f"]})},e.name)}))})]}),t.events&&Object(r.jsxs)("div",{children:[Object(r.jsx)("h2",{children:"Events"}),Object(r.jsx)("div",{className:"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4",children:Object(s.a)(t.events).sort((function(e,t){return e.name>t.name?1:-1})).map((function(e){return Object(r.jsx)("div",{children:Object(r.jsx)("a",{className:"cursor-pointer",onClick:function(){return a(e.name)},children:e.name})},e.name)}))})]}),t.props&&Object(r.jsxs)(r.Fragment,{children:[Object(r.jsx)("h2",{children:"Properties"}),Object(r.jsx)("div",{className:"flex flex-col gap-8",children:Object(s.a)(t.props).sort((function(e,t){return e.name>t.name?1:-1})).map((function(e){var t;return Object(r.jsxs)("div",{children:[Object(r.jsxs)("p",{className:"text-lg text-lightPurple dark:text-lightestPurple cursor-pointer",onClick:function(){return a(e.name)},children:[e.name,e.readonly&&" \ud83c\udd41"]}),Object(r.jsx)("p",{className:"markdown markdown-p my-1",dangerouslySetInnerHTML:{__html:o.renderInline(e.description)}}),Object(r.jsx)("p",{className:"text-sm",dangerouslySetInnerHTML:{__html:"Type: ".concat(n(i(null!==(t=e.type)&&void 0!==t?t:[[["NO TYPES"]]])))}})]},e.name)}))})]}),t.methods&&Object(r.jsxs)(r.Fragment,{children:[Object(r.jsx)("h2",{children:"Methods"}),Object(r.jsx)("div",{className:"flex flex-col gap-8",children:Object(s.a)(t.methods).sort((function(e,t){return e.name>t.name?1:-1})).map((function(e){var t,s,c,l;return Object(r.jsxs)("div",{children:[Object(r.jsxs)("p",{className:"text-lg text-lightPurple dark:text-lightestPurple cursor-pointer",onClick:function(){return a(e.name)},children:[e.name,"private"===e.access&&" \ud83c\udd3f"]}),Object(r.jsx)("p",{className:"markdown markdown-p my-1",dangerouslySetInnerHTML:{__html:o.renderInline(e.description)}}),Object(r.jsx)("pre",{children:Object(r.jsx)("code",{className:"hljs language-typescript",children:"client.".concat(e.name,"(").concat(e.params?e.params.map((function(e){var t=e.name;return e.type.flat(2).includes("undefined")?t+"?":t})).join(", "):"",")")})}),e.params&&Object(r.jsxs)("div",{className:"flex flex-col border border-gray-300 dark:border-gray-700 my-2",children:[Object(r.jsxs)("div",{className:"flex",children:[Object(r.jsx)("div",{className:"bg-purple text-white text-sm sm:text-base w-32 sm:w-40 py-1 px-1.5 flex items-center flex-shrink-0 border border-gray-300 dark:border-gray-700",children:"Parameter"}),Object(r.jsx)("div",{className:"bg-purple text-white text-sm sm:text-base w-40 sm:w-52 py-1 px-1.5 flex items-center flex-shrink-0 border border-gray-300 dark:border-gray-700",children:"Type"}),Object(r.jsx)("div",{className:"bg-purple text-white text-sm sm:text-base flex-1 py-1 px-1.5 flex items-center border border-gray-300 dark:border-gray-700",children:"Description"})]}),e.params.map((function(e){return Object(r.jsxs)("div",{className:"flex",children:[Object(r.jsx)("div",{className:"w-32 sm:w-40 py-1 px-1.5 flex items-center font-mono text-xs sm:text-sm flex-shrink-0 border border-gray-300 dark:border-gray-700",children:e.name}),Object(r.jsx)("div",{className:"w-40 sm:w-52 py-1 px-1.5 flex text-sm sm:text-base items-center flex-shrink-0 border border-gray-300 dark:border-gray-700",dangerouslySetInnerHTML:{__html:n(i(e.type,!0))}}),Object(r.jsx)("div",{className:"flex-1 py-1 px-1.5 text-sm sm:text-base flex items-center border border-gray-300 dark:border-gray-700",children:e.description})]},e.name)}))]}),Object(r.jsx)("p",{className:"text-sm",dangerouslySetInnerHTML:{__html:o.renderInline(n("Returns: ".concat(i(Array.isArray(e.returns)?e.returns:null!==(t=null===(s=e.returns)||void 0===s?void 0:s.types)&&void 0!==t?t:[[["NO TYPES"]]])).concat(Array.isArray(e.returns)?"":" ".concat(null!==(c=null===(l=e.returns)||void 0===l?void 0:l.description)&&void 0!==c?c:"NO DESCRIPTION"))))}})]},e.name)}))})]}),t.events&&Object(r.jsxs)(r.Fragment,{children:[Object(r.jsx)("h2",{children:"Events"}),Object(r.jsx)("div",{className:"flex flex-col gap-8",children:t.events.map((function(e){return Object(r.jsxs)("div",{children:[Object(r.jsx)("p",{className:"text-lg text-lightPurple dark:text-lightestPurple cursor-pointer",onClick:function(){return a(e.name)},children:e.name}),Object(r.jsx)("p",{className:"markdown markdown-p my-1",dangerouslySetInnerHTML:{__html:o.renderInline(e.description)}}),e.params&&Object(r.jsxs)("div",{className:"flex flex-col border border-gray-300 dark:border-gray-700 my-2",children:[Object(r.jsxs)("div",{className:"flex",children:[Object(r.jsx)("div",{className:"bg-purple text-white text-sm w-32 sm:w-40 py-1 px-1.5 flex items-center flex-shrink-0 border border-gray-300 dark:border-gray-700",children:"Parameter"}),Object(r.jsx)("div",{className:"bg-purple text-white text-sm w-40 sm:w-52 py-1 px-1.5 flex items-center flex-shrink-0 border border-gray-300 dark:border-gray-700",children:"Type"}),Object(r.jsx)("div",{className:"bg-purple text-white text-sm flex-1 py-1 px-1.5 flex items-center border border-gray-300 dark:border-gray-700",children:"Description"})]}),e.params.map((function(e){return Object(r.jsxs)("div",{className:"flex",children:[Object(r.jsx)("div",{className:"w-32 sm:w-40 py-1 px-1.5 flex items-center font-mono text-sm flex-shrink-0 border border-gray-300 dark:border-gray-700",children:e.name}),Object(r.jsx)("div",{className:"w-40 sm:w-52 py-1 px-1.5 flex text-sm items-center flex-shrink-0 border border-gray-300 dark:border-gray-700",dangerouslySetInnerHTML:{__html:n(i(e.type,!0))}}),Object(r.jsx)("div",{className:"flex-1 py-1 px-1.5 text-sm flex items-center border border-gray-300 dark:border-gray-700",children:e.description})]},e.name)}))]})]})}))})]}),Object(r.jsx)("div",{className:"h-4"})]})}},48:function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var s=n(4),a=n(7),r=n(1),i=n(6),o=n(10),c=n(11),l=n(0);function d(e){var t=e.name,n=e.pages,s=e.active,i=e.close,o=Object(r.useState)(!0),d=Object(a.a)(o,2),p=d[0],m=d[1],h=Object(r.useState)(!p),u=Object(a.a)(h,2),f=u[0],g=u[1];return Object(r.useEffect)((function(){p?setTimeout((function(){return g(!1)}),150):g(!0)}),[p]),Object(l.jsxs)("div",{children:[Object(l.jsxs)("div",{className:"flex items-center gap-2",children:[Object(l.jsx)("button",{className:"text-sm text-gray-700 dark:text-gray-100 transform ".concat(p?"":"-rotate-90"," transition-transform outline-none focus:outline-none"),onClick:function(){return m(!p)},children:"\u25bc"}),Object(l.jsx)("h2",{className:"text-purple dark:text-lightestPurple select-none",children:t})]}),Object(l.jsx)("ul",{className:"pl-1",style:{overflow:f?"hidden":"",height:p?20*n.length:0,transition:"0.15s ease height"},children:n.map((function(e){return Object(l.jsx)("li",{className:"pl-5 flex border-l-2 hover:border-lightPurple ".concat(s==="".concat(t.toLowerCase(),"/").concat(e.slug)?"border-lightPurple":"dark:border-gray-600"),children:Object(l.jsx)(c.b,{className:"block flex-1 text-sm ".concat(s==="".concat(t.toLowerCase(),"/").concat(e.slug)?"text-gray-900 dark:text-gray-100":"text-gray-700 dark:text-gray-500"),to:{pathname:"/docs/".concat(t.toLowerCase(),"/").concat(e.slug)},onClick:i,children:e.name})},"".concat(t.toLowerCase(),"/").concat(e.slug))}))})]})}function p(e){var t=e.active,n=Object(r.useState)(!1),c=Object(a.a)(n,2),p=c[0],m=c[1];return Object(r.useEffect)((function(){document.addEventListener("click",(function(e){e.target.closest(".sidebar")||e.target.closest(".sidebar-trigger")||!p||m(!1)}))}),[]),Object(l.jsxs)(l.Fragment,{children:[Object(l.jsx)("div",{className:"sidebar-trigger z-20 fixed w-2 bg-purple min-h-full lg:hidden",style:{maxHeight:"calc(100vh - 3rem)"},onClick:function(){return m(!p)}}),Object(l.jsxs)("aside",{className:"sidebar transform ".concat(p?"":"-translate-x-full"," transition-transform shadow absolute z-10 bg-white lg:shadow-none lg:static lg:transform-none px-4 xl:px-0 py-3 w-60 flex-shrink-0 border-r border-gray-100 dark:border-gray-700 dark:bg-dark overflow-y-scroll min-h-full"),style:{maxHeight:"calc(100vh - 3rem)"},children:[Object(l.jsxs)("div",{children:[o.categories.map((function(e){var n=e.name,s=e.pages;return Object(l.jsx)(d,{name:n,pages:s,active:t,close:function(){return m(!1)}},n)})),Object(l.jsx)(d,{name:"Classes",pages:Object(s.a)(i.classes).sort((function(e,t){return e.name>t.name?1:-1})).map((function(e){var t=e.name;return{name:t,slug:t.toLowerCase(),content:""}})),active:t,close:function(){return m(!1)}}),Object(l.jsx)(d,{name:"Typedefs",pages:Object(s.a)(i.typedefs).sort((function(e,t){return e.name>t.name?1:-1})).map((function(e){var t=e.name;return{name:t,slug:t.toLowerCase(),content:""}})),active:t,close:function(){return m(!1)}}),Object(l.jsx)(d,{name:"Externals",pages:Object(s.a)(i.externals).sort((function(e,t){return e.name>t.name?1:-1})).map((function(e){var t=e.name;return{name:t,slug:t.toLowerCase(),content:""}})),active:t,close:function(){return m(!1)}})]}),Object(l.jsx)("div",{className:"fixed bg-lightPurple h-full"})]})]})}},6:function(e){e.exports=JSON.parse('{"meta":{"generator":"1.0.0","format":20,"date":1623962216517},"classes":[{"name":"Base","description":"Base class for any entity returned by the Twitch API.","abstract":true,"construct":{"name":"Base","description":"Constructs a new base prototype.","params":[{"name":"client","description":"Client that instantiated this entity.","type":[[["Client"]]]}]},"props":[{"name":"client","description":"Client that instantiated this entity.","readonly":true,"type":[[["Client"]]],"meta":{"line":19,"file":"Base.js","path":"dist/base"}}],"meta":{"line":8,"file":"Base.js","path":"dist/base"}},{"name":"Cache","description":"Implements some sort of LFU cache with a few utility methods.\\nBuilt specifically for entity managers.","construct":{"name":"Cache","description":"Creates a new cache.","params":[{"name":"options","description":"Options to configure the caching behaviour.","type":[[["CacheOptions"]]]}]},"methods":[{"name":"clear","description":"Clears the entire cache.","returns":{"types":[[["void"]]],"description":"Nothing."},"meta":{"line":27,"file":"Cache.js","path":"dist/base"}},{"name":"get","description":"Retrieves a value from the cache.","params":[{"name":"key","description":"Key to retrieve.","type":[[["string"]]]}],"returns":{"types":[[["Value"]],[["undefined"]]],"description":"The retrieved value, if any."},"meta":{"line":41,"file":"Cache.js","path":"dist/base"}},{"name":"set","description":"Sets or updates a key to a new value.","params":[{"name":"key","description":"Key to set or update.","type":[[["string"]]]},{"name":"value","description":"New value to store.","type":[[["Value"]]]}],"returns":{"types":[[["this"]]],"description":"The newly updated cache."},"meta":{"line":63,"file":"Cache.js","path":"dist/base"}},{"name":"delete","description":"Deletes a key from the cache.","params":[{"name":"key","description":"Key to delete","type":[[["string"]]]}],"returns":{"types":[[["Value"]]],"description":"The deleted value."},"meta":{"line":85,"file":"Cache.js","path":"dist/base"}},{"name":"has","description":"Returns true if the cache holds the key.","params":[{"name":"key","description":"Key to check.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"True if the cache has the key."},"meta":{"line":100,"file":"Cache.js","path":"dist/base"}},{"name":"find","description":"Performs a search operation on the cache\'s values.","params":[{"name":"predicate","description":"Callback function to execute.","type":[[["function"]]]},{"name":"thisArg","description":"Optional `this` context for the callback.","type":[[["any"]],[["undefined"]]]}],"returns":{"types":[[["Value"]],[["undefined"]]],"description":"The found value, if any."},"meta":{"line":109,"file":"Cache.js","path":"dist/base"}}],"meta":{"line":12,"file":"Cache.js","path":"dist/base"}},{"name":"Client","description":"The main client to interact with the Twitch API.\\nSupports app and user access tokens and is configurable.\\nDelegates API endpoints to different managers.","extends":[[["EventEmitter"]]],"construct":{"name":"Client","description":"Creates a new client to interact with the Twitch API.","params":[{"name":"options","description":"Options for the client.","type":[[["ClientOptions"]]]}]},"props":[{"name":"options","description":"Options given to the client.","readonly":true,"type":[[["ClientOptions"]]],"meta":{"line":35,"file":"Client.js","path":"dist/base"}},{"name":"scope","description":"Client\'s token\'s current scopes.","readonly":true,"type":[[["Array","<"],["string",">"]]],"meta":{"line":53,"file":"Client.js","path":"dist/base"}},{"name":"channels","description":"Client\'s channel manager.","readonly":true,"type":[[["ChannelManager"]]],"meta":{"line":59,"file":"Client.js","path":"dist/base"}},{"name":"users","description":"Client\'s user manager.","readonly":true,"type":[[["UserManager"]]],"meta":{"line":65,"file":"Client.js","path":"dist/base"}},{"name":"emotes","description":"Client\'s emote manager.","readonly":true,"type":[[["EmoteManager"]]],"meta":{"line":71,"file":"Client.js","path":"dist/base"}},{"name":"user","description":"Client\'s current authenticated user.","readonly":true,"type":[[["ClientUser"]]],"meta":{"line":77,"file":"Client.js","path":"dist/base"}},{"name":"token","description":"Current token being used.","readonly":true,"type":[[["string"]]],"meta":{"line":301,"file":"Client.js","path":"dist/base"}},{"name":"type","description":"Authentication type; either `\\"app\\"` or `\\"user\\"`.","readonly":true,"type":[[["string"]]],"meta":{"line":309,"file":"Client.js","path":"dist/base"}}],"methods":[{"name":"login","description":"Logs in the client and retrieves an app access token.","examples":["```js\\nconst token = await client.login();\\n```"],"returns":{"types":[[["Promise","<("],["string","|"],["object",")>"]]],"description":"The new access token or OAuth details object."},"meta":{"line":89,"file":"Client.js","path":"dist/base"}},{"name":"destroy","description":"Destroys the client and revokes its access token.\\n\\nTODO: Add a destroy method on managers as well and call it here.","returns":{"types":[[["Promise","<"],["undefined",">"]]],"description":"Nothing."},"meta":{"line":211,"file":"Client.js","path":"dist/base"}},{"name":"setInterval","description":"Sets an interval to be managed by the client.","access":"private","returns":[[["Timeout"]]],"meta":{"line":317,"file":"Client.js","path":"dist/base"}},{"name":"setTimeout","description":"Sets a timeout to be managed by the client.","access":"private","returns":[[["Timeout"]]],"meta":{"line":327,"file":"Client.js","path":"dist/base"}},{"name":"clearInterval","description":"Clears an interval managed by the client.","access":"private","returns":[[["undefined"]]],"meta":{"line":337,"file":"Client.js","path":"dist/base"}},{"name":"clearTimeout","description":"Clears a timeout managed by the client.","access":"private","returns":[[["undefined"]]],"meta":{"line":347,"file":"Client.js","path":"dist/base"}},{"name":"on","description":"Adds an event listener to the client.","params":[{"name":"event","description":"Event to listen to.","type":[[["string"]]]},{"name":"listener","description":"Callback for the event.","type":[[["function"]]]}],"returns":{"types":[[["Client"]]],"description":"The client instance."},"meta":{"line":358,"file":"Client.js","path":"dist/base"}},{"name":"once","description":"Adds an event listener to the client, but the listener gets removed as soon as an event is received.","params":[{"name":"event","description":"Event to listen to.","type":[[["string"]]]},{"name":"listener","description":"Callback for the event.","type":[[["function"]]]}],"returns":{"types":[[["Client"]]],"description":"The client instance."},"meta":{"line":367,"file":"Client.js","path":"dist/base"}}],"events":[{"name":"ready","description":"Emitted when the client has been set up.","meta":{"line":32,"file":"client.js","path":"dist/types/base"}},{"name":"debug","description":"Emits general debugging info.","params":[{"name":"info","description":"Debugging information emitted.","type":[[["string"]]]}],"meta":{"line":36,"file":"client.js","path":"dist/types/base"}},{"name":"destroy","description":"Emitted when the client has been destroyed.","meta":{"line":41,"file":"client.js","path":"dist/types/base"}},{"name":"channelCreate","description":"Emitted when a new Channel instance has been created.","params":[{"name":"channel","description":"The new channel.","type":[[["Channel"]]]}],"meta":{"line":45,"file":"client.js","path":"dist/types/base"}},{"name":"userCreate","description":"Emitted when a new User instance has been created.","params":[{"name":"user","description":"The new user.","type":[[["User"]]]}],"meta":{"line":50,"file":"client.js","path":"dist/types/base"}},{"name":"channelEmoteCreate","description":"Emitted when a new ChannelEmote instance has been created.","params":[{"name":"emote","description":"The new channel emote.","type":[[["ChannelEmote"]]]}],"meta":{"line":55,"file":"client.js","path":"dist/types/base"}},{"name":"channelEmoteSetCreate","description":"Emitted when a new ChannelEmoteSet instance has been created.","params":[{"name":"set","description":"The new channel emote set.","type":[[["ChannelEmoteSet"]]]}],"meta":{"line":60,"file":"client.js","path":"dist/types/base"}},{"name":"channelRewardCreate","description":"Emitted when a new ChannelReward instance has been created.","params":[{"name":"reward","description":"The new channel reward.","type":[[["ChannelReward"]]]}],"meta":{"line":65,"file":"client.js","path":"dist/types/base"}}],"meta":{"line":18,"file":"Client.js","path":"dist/base"}},{"name":"Manager","description":"Manager superclass with a cache and method to fetch entities.","abstract":true,"construct":{"name":"Manager","description":"Creates a new manager.","params":[{"name":"client","description":"Client that instantiated this manager.","type":[[["Client"]]]},{"name":"options","description":"Options for the cache.","type":[[["CacheOptions"]]]}]},"props":[{"name":"cache","description":"Data cached by the manager.","readonly":true,"type":[[["Cache","<"],["Value",">"]]],"meta":{"line":27,"file":"Manager.js","path":"dist/base"}}],"meta":{"line":12,"file":"Manager.js","path":"dist/base"}},{"name":"Channel","description":"Twitch API\'s channel entity represented in a class.","extends":[[["Base"]]],"construct":{"name":"Channel","description":"Creates a new channel.","params":[{"name":"client","description":"Client that instantiated this channel.","type":[[["Client"]]]},{"name":"data","description":"Channel data.","type":[[["ChannelData"]]]}]},"props":[{"name":"client","description":"Client that instantiated this channel.","readonly":true,"type":[[["Client"]]],"meta":{"line":30,"file":"Channel.js","path":"dist/classes/channels"}},{"name":"emotes","description":"Manages this channel\'s emotes.","readonly":true,"type":[[["ChannelEmoteManager"]]],"meta":{"line":36,"file":"Channel.js","path":"dist/classes/channels"}},{"name":"emoteSets","description":"Manages this channel\'s emote sets.","readonly":true,"type":[[["ChannelEmoteSetManager"]]],"meta":{"line":42,"file":"Channel.js","path":"dist/classes/channels"}},{"name":"rewards","description":"Manages this channel\'s rewards.","readonly":true,"type":[[["ChannelRewardManager"]]],"meta":{"line":48,"file":"Channel.js","path":"dist/classes/channels"}},{"name":"id","description":"Broadcaster ID of the channel.","readonly":true,"type":[[["string"]]],"meta":{"line":56,"file":"Channel.js","path":"dist/classes/channels"}},{"name":"language","description":"Main language of the channel.","readonly":true,"type":[[["string"]]],"meta":{"line":64,"file":"Channel.js","path":"dist/classes/channels"}},{"name":"name","description":"Name of the channel.","readonly":true,"type":[[["string"]]],"meta":{"line":72,"file":"Channel.js","path":"dist/classes/channels"}},{"name":"gameName","description":"Current game name.","readonly":true,"type":[[["string"]]],"meta":{"line":80,"file":"Channel.js","path":"dist/classes/channels"}},{"name":"gameId","description":"Current game ID.","readonly":true,"type":[[["string"]]],"meta":{"line":88,"file":"Channel.js","path":"dist/classes/channels"}},{"name":"title","description":"Title of the channel.","readonly":true,"type":[[["string"]]],"meta":{"line":96,"file":"Channel.js","path":"dist/classes/channels"}},{"name":"delay","description":"Delay of the channel.","readonly":true,"type":[[["number"]]],"meta":{"line":104,"file":"Channel.js","path":"dist/classes/channels"}}],"methods":[{"name":"update","description":"Updates this instance with newly fetched data.","returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"True if the update was successful."},"meta":{"line":111,"file":"Channel.js","path":"dist/classes/channels"}}],"meta":{"line":15,"file":"Channel.js","path":"dist/classes/channels"}},{"name":"ChannelEmote","description":"An emote used in a channel on Twitch.","extends":[[["Emote"]]],"construct":{"name":"ChannelEmote","description":"Creates a new channel emote.","params":[{"name":"client","description":"Client that instantiated this emote.","type":[[["Client"]]]},{"name":"data","description":"Emote data to consume.","type":[[["ChannelEmoteData"]]]},{"name":"broadcasterId","description":"ID of the broadcaster.","type":[[["string"]]]}]},"props":[{"name":"client","description":"Client that instantiated this emote.","readonly":true,"type":[[["Client"]]],"meta":{"line":29,"file":"ChannelEmote.js","path":"dist/classes/channels"}},{"name":"id","description":"This emote\'s ID.","readonly":true,"type":[[["string"]]],"meta":{"line":37,"file":"ChannelEmote.js","path":"dist/classes/channels"}},{"name":"name","description":"This emote\'s name.","readonly":true,"type":[[["string"]]],"meta":{"line":45,"file":"ChannelEmote.js","path":"dist/classes/channels"}},{"name":"images","description":"This emote\'s image urls.","readonly":true,"type":[[["Array","<"],["string",">"]]],"meta":{"line":53,"file":"ChannelEmote.js","path":"dist/classes/channels"}},{"name":"tier","description":"This emote\'s tier.","readonly":true,"type":[[["string"]]],"meta":{"line":61,"file":"ChannelEmote.js","path":"dist/classes/channels"}},{"name":"type","description":"This emote\'s type.","readonly":true,"type":[[["string"]]],"meta":{"line":69,"file":"ChannelEmote.js","path":"dist/classes/channels"}},{"name":"setId","description":"This emote\'s set\'s ID.","readonly":true,"type":[[["string"]]],"meta":{"line":77,"file":"ChannelEmote.js","path":"dist/classes/channels"}}],"methods":[{"name":"update","description":"Updates this emote with newly fetched data from the API.","returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"True if the update was successful."},"meta":{"line":84,"file":"ChannelEmote.js","path":"dist/classes/channels"}}],"meta":{"line":12,"file":"ChannelEmote.js","path":"dist/classes/channels"}},{"name":"ChannelEmoteManager","description":"Manages channel emotes.","extends":[[["Manager"]]],"construct":{"name":"ChannelEmoteManager","description":"Constructs a new channel emote manager.","params":[{"name":"client","description":"Client that instantiated this manager.","type":[[["Client"]]]},{"name":"channel","description":"Channel that instantiated this manager.","type":[[["Channel"]]]}]},"props":[{"name":"client","description":"Client that instantiated this manager.","readonly":true,"type":[[["Client"]]],"meta":{"line":40,"file":"ChannelEmoteManager.js","path":"dist/classes/channels"}},{"name":"cache","description":"Data cached by the manager.","readonly":true,"type":[[["Cache","<"],["Value",">"]]],"meta":{"line":27,"file":"Manager.js","path":"dist/base"}}],"methods":[{"name":"fetch","description":"Fetches emotes from the channel.","params":[{"name":"id","description":"Optional ID to fetch.","type":[[["string"]],[["undefined"]]]}],"returns":{"types":[[["Promise","<("],["ChannelEmote","|"],["undefined",")>"]],[["Promise","<"],["Collection","<"],["string",", "],["ChannelEmote",">>"]]],"description":"The fetched emotes."},"meta":{"line":47,"file":"ChannelEmoteManager.js","path":"dist/classes/channels"}}],"meta":{"line":14,"file":"ChannelEmoteManager.js","path":"dist/classes/channels"}},{"name":"ChannelEmoteSet","description":"A set of channel emotes.","extends":[[["Base"]]],"construct":{"name":"ChannelEmoteSet","description":"Creates a new channel emote set.","params":[{"name":"client","description":"Client that instantiated this set.","type":[[["Client"]]]},{"name":"data","description":"Data for the emote set.","type":[[["Array","<"],["SetEmoteData",">"]]]},{"name":"channel","description":"Channel the set is in.","type":[[["Channel"]]]}]},"props":[{"name":"channelID","description":"Parent channel\'s ID.","readonly":true,"type":[[["string"]]],"meta":{"line":31,"file":"ChannelEmoteSet.js","path":"dist/classes/channels"}},{"name":"id","description":"Emote set\'s ID.","readonly":true,"type":[[["string"]]],"meta":{"line":37,"file":"ChannelEmoteSet.js","path":"dist/classes/channels"}},{"name":"emotes","description":"The set of emotes in this set.","readonly":true,"type":[[["Collection","<"],["string",", "],["ChannelEmote",">"]]],"meta":{"line":47,"file":"ChannelEmoteSet.js","path":"dist/classes/channels"}},{"name":"client","description":"Client that instantiated this set.","readonly":true,"type":[[["Client"]]],"meta":{"line":53,"file":"ChannelEmoteSet.js","path":"dist/classes/channels"}}],"methods":[{"name":"update","description":"Updates this instance with new data from the API.","returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"True if the update was successful."},"meta":{"line":60,"file":"ChannelEmoteSet.js","path":"dist/classes/channels"}}],"meta":{"line":14,"file":"ChannelEmoteSet.js","path":"dist/classes/channels"}},{"name":"ChannelEmoteSetManager","description":"Manages emote sets in a channel.","extends":[[["Manager","<"],["ChannelEmoteSet",">"]]],"construct":{"name":"ChannelEmoteSetManager","description":"Creates a new channel emote set manager.","params":[{"name":"client","description":"Client that instantiated this manager.","type":[[["Client"]]]},{"name":"channel","description":"Channel this manager belongs to.","type":[[["Channel"]]]}]},"props":[{"name":"channel","description":"Channel this manager belongs to.","readonly":true,"type":[[["Channel"]]],"meta":{"line":38,"file":"ChannelEmoteSetManager.js","path":"dist/classes/channels"}},{"name":"client","description":"Client that instantiated this manager.","readonly":true,"type":[[["Client"]]],"meta":{"line":44,"file":"ChannelEmoteSetManager.js","path":"dist/classes/channels"}}],"methods":[{"name":"fetch","description":"Fetches an emote set from the API.","params":[{"name":"id","description":"ID of the emote set to fetch.","type":[[["string"]]]}],"returns":{"types":[[["Promise","<"],["ChannelEmoteSet",">"]]],"description":"The fetched emote set."},"meta":{"line":51,"file":"ChannelEmoteSetManager.js","path":"dist/classes/channels"}}],"meta":{"line":13,"file":"ChannelEmoteSetManager.js","path":"dist/classes/channels"}},{"name":"ChannelManager","description":"Manages channels.","extends":[[["Manager","<"],["Channel",">"]]],"construct":{"name":"ChannelManager","description":"Creates a new channel manager.","params":[{"name":"client","description":"Client that instantiated this channel.","type":[[["Client"]]]}]},"props":[{"name":"client","description":"Client that instantiated this channel.","readonly":true,"type":[[["Client"]]],"meta":{"line":39,"file":"ChannelManager.js","path":"dist/classes/channels"}}],"methods":[{"name":"fetch","description":"Fetches a channel from the Twitch API.","params":[{"name":"id","description":"ID to fetch.","type":[[["string"]]]},{"name":"force","description":"Skip cache check and request directly from the API.","type":[[["boolean"]],[["undefined"]]]}],"returns":{"types":[[["Promise","<("],["Channel","|"],["undefined",")>"]]],"description":"The fetched channel."},"meta":{"line":47,"file":"ChannelManager.js","path":"dist/classes/channels"}}],"meta":{"line":14,"file":"ChannelManager.js","path":"dist/classes/channels"}},{"name":"ChannelReward","description":"A reward in a channel.","extends":[[["Base"]]],"construct":{"name":"ChannelReward","description":"Creates a new channel reward entity.","params":[{"name":"client","description":"Client that instantiated this reward.","type":[]},{"name":"data","description":"Data for the reward.","type":[]}]},"props":[{"name":"client","description":"Client that instantiated this reward.","readonly":true,"type":[[["Client"]]],"meta":{"line":23,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"broadcasterId","description":"ID of the broadcaster.","readonly":true,"type":[[["string"]]],"meta":{"line":32,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"broadcasterLogin","description":"Broadcaster\'s login.","readonly":true,"type":[[["string"]]],"meta":{"line":40,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"broadcasterName","description":"Broadcaster\'s name.","readonly":true,"type":[[["string"]]],"meta":{"line":48,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"id","description":"Reward\'s id.","readonly":true,"type":[[["string"]]],"meta":{"line":56,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"title","description":"Reward\'s title.","readonly":true,"type":[[["string"]]],"meta":{"line":64,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"prompt","description":"Reward\'s prompt.","readonly":true,"type":[[["string"]]],"meta":{"line":72,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"cost","description":"Reward\'s cost.","readonly":true,"type":[[["number"]]],"meta":{"line":80,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"image","description":"Reward\'s image URL.","readonly":true,"type":[[["string"]]],"meta":{"line":88,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"defaultImage","description":"Reward\'s default image URL.","readonly":true,"type":[[["string"]]],"meta":{"line":96,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"backgroundColor","description":"Reward\'s background color.","readonly":true,"type":[[["string"]]],"meta":{"line":104,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"isEnabled","description":"If the reward is enabled.","readonly":true,"type":[[["boolean"]]],"meta":{"line":112,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"userInputRequired","description":"If user input is required.","readonly":true,"type":[[["boolean"]]],"meta":{"line":120,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"maxPerStream","description":"Max reward count per stream.","readonly":true,"type":[[["object"]]],"meta":{"line":128,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"maxPerUser","description":"Max reward per user per stream.","readonly":true,"type":[[["object"]]],"meta":{"line":136,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"globalCooldown","description":"Global cooldown.","readonly":true,"type":[[["object"]]],"meta":{"line":144,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"isPaused","description":"If the reward is paused.","readonly":true,"type":[[["boolean"]]],"meta":{"line":152,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"isInStock","description":"If the reward is in stock.","readonly":true,"type":[[["boolean"]]],"meta":{"line":160,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"redemptionsSkipQueue","description":"Should redemptions skip the request queue?","readonly":true,"type":[[["boolean"]]],"meta":{"line":168,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"redemptionsRedeemed","description":"Redemptions redeemed.","readonly":true,"type":[[["number"]]],"meta":{"line":176,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"cooldownExpiresAt","description":"When the cooldown expires.","readonly":true,"type":[[["string"]]],"meta":{"line":184,"file":"ChannelReward.js","path":"dist/classes/channels"}}],"meta":{"line":10,"file":"ChannelReward.js","path":"dist/classes/channels"}},{"name":"ChannelRewardManager","construct":{"name":"ChannelRewardManager","description":"Creates a new channel reward manager.","params":[{"name":"client","description":"Client that instantiated this manager.","type":[[["Client"]]]},{"name":"channelId","description":"Parent channel\'s id.","type":[[["string"]]]}]},"props":[{"name":"client","description":"Client that instantiated this manager.","readonly":true,"type":[[["Client"]]],"meta":{"line":30,"file":"ChannelRewardManager.js","path":"dist/classes/channels"}}],"methods":[{"name":"fetch","description":"Fetches a reward.\\nTODO: Implement fetching.","params":[{"name":"id","description":"ID to fetch.","type":[[["string"]]]}],"returns":{"types":[[["Promise","<("],["ChannelReward","|"],["undefined",")>"]]],"description":"The fetched reward, if any."},"meta":{"line":39,"file":"ChannelRewardManager.js","path":"dist/classes/channels"}}],"meta":{"line":11,"file":"ChannelRewardManager.js","path":"dist/classes/channels"}},{"name":"Emote","description":"Represents a global emote on Twitch.","extends":[[["Base"]]],"construct":{"name":"Emote","description":"Constructs an Emote from the client and raw data.","params":[{"name":"client","description":"The client this emote belongs to","type":[[["Client"]]]},{"name":"data","description":"The raw data provided by the api","type":[[["EmoteData"]]]}]},"props":[{"name":"id","description":"The emote\'s ID","readonly":true,"type":[[["string"]]],"meta":{"line":30,"file":"Emote.js","path":"dist/classes/emotes"}},{"name":"name","description":"The emote\'s name","readonly":true,"type":[[["string"]]],"meta":{"line":38,"file":"Emote.js","path":"dist/classes/emotes"}},{"name":"images","description":"The emote\'s images","readonly":true,"type":[[["Array","<"],["string",">"]]],"meta":{"line":46,"file":"Emote.js","path":"dist/classes/emotes"}},{"name":"client","description":"Client that instantiated this entity.","readonly":true,"type":[[["Client"]]],"meta":{"line":19,"file":"Base.js","path":"dist/base"}}],"methods":[{"name":"update","description":"Updates this emote\'s data.","returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"True if the update was succesful."},"meta":{"line":53,"file":"Emote.js","path":"dist/classes/emotes"}}],"meta":{"line":13,"file":"Emote.js","path":"dist/classes/emotes"}},{"name":"EmoteManager","description":"Manages global emotes.","extends":[[["Manager","<"],["Emote",">"]]],"construct":{"name":"EmoteManager","description":"Constructs an EmoteManager for the client.","params":[{"name":"client","description":"The client that this manager belongs to","type":[[["Client"]]]}]},"methods":[{"name":"get","description":"Returns the emote with the given ID in cache or undefined.","params":[{"name":"id","description":"the ID of the emote to get","type":[[["string"]]]}],"returns":{"types":[[["Emote"]],[["undefined"]]],"description":"the emote with the given ID"},"meta":{"line":40,"file":"EmoteManager.js","path":"dist/classes/emotes"}},{"name":"fetch","description":"Fetches global emotes from Twitch.","params":[{"name":"id","description":"Fetches the emote with this ID.","type":[[["string"]],[["undefined"]]]}],"returns":{"types":[[["Promise","<"],["Emote",">"]],[["Promise","<"],["Collection","<"],["string",", "],["Emote",">>"]]],"description":"The fetched emotes."},"meta":{"line":48,"file":"EmoteManager.js","path":"dist/classes/emotes"}}],"meta":{"line":14,"file":"EmoteManager.js","path":"dist/classes/emotes"}},{"name":"ClientUser","description":"User representing the client on Twitch.","extends":[[["User"]]],"construct":{"name":"ClientUser","description":"Creates a new user.","params":[{"name":"client","description":"Client that instantiated this user.","type":[[["Client"]]]},{"name":"data","description":"User\'s data.","type":[[["UserData"]]]}]},"props":[{"name":"client","description":"Client that instantiated this user.","readonly":true,"type":[[["Client"]]],"meta":{"line":25,"file":"ClientUser.js","path":"dist/classes/users"}},{"name":"id","description":"The user\'s ID.","readonly":true,"type":[[["string"]]],"meta":{"line":38,"file":"User.js","path":"dist/classes/users"}},{"name":"login","description":"The user\'s login name (username but all lowercase).","readonly":true,"type":[[["string"]]],"meta":{"line":46,"file":"User.js","path":"dist/classes/users"}},{"name":"displayName","description":"The user\'s display name.","readonly":true,"type":[[["string"]]],"meta":{"line":54,"file":"User.js","path":"dist/classes/users"}},{"name":"type","description":"The user\'s type (staff status).","readonly":true,"type":[[["string"]]],"meta":{"line":62,"file":"User.js","path":"dist/classes/users"}},{"name":"broadcasterType","description":"The user\'s broadcaster type (partner program).","readonly":true,"type":[[["string"]]],"meta":{"line":70,"file":"User.js","path":"dist/classes/users"}},{"name":"viewCount","description":"Total number of views on this user\'s channel.","readonly":true,"type":[[["number"]]],"meta":{"line":78,"file":"User.js","path":"dist/classes/users"}},{"name":"email","description":"Returns the email of the user (scope `user:read:email` is required).","readonly":true,"type":[[["string"]],[["undefined"]]],"meta":{"line":86,"file":"User.js","path":"dist/classes/users"}},{"name":"description","description":"The user\'s description.","readonly":true,"type":[[["string"]]],"meta":{"line":94,"file":"User.js","path":"dist/classes/users"}},{"name":"createdAt","description":"The Date object when the user was created.","readonly":true,"type":[[["Date"]]],"meta":{"line":105,"file":"User.js","path":"dist/classes/users"}},{"name":"createdTimestamp","description":"The unix timestamp when the user was created.","readonly":true,"type":[[["number"]]],"meta":{"line":113,"file":"User.js","path":"dist/classes/users"}}],"methods":[{"name":"setDescription","description":"Updates the description of this user.","params":[{"name":"description","description":"New description.","type":[[["string"]]]}],"returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"True if the update was succesful."},"meta":{"line":32,"file":"ClientUser.js","path":"dist/classes/users"}},{"name":"avatarURL","description":"Returns the user\'s avatar URL.\\nIf `options.offline` is true, the offline avatar will be returned.","inherits":"User#avatarURL","inherited":true,"params":[{"name":"options","description":"Options for the avatar URL.","type":[[["AvatarURLOptions"]]]}],"returns":{"types":[[["string"]]],"description":"The user\'s avatar URL."},"meta":{"line":122,"file":"User.js","path":"dist/classes/users"}},{"name":"update","description":"Updates this user object to hold the newest data.","inherits":"User#update","inherited":true,"returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"True if the update was successful."},"meta":{"line":129,"file":"User.js","path":"dist/classes/users"}},{"name":"block","description":"Blocks the user. Requires the `user:manage:blocked_users` scope.","inherits":"User#block","inherited":true,"params":[{"name":"options","description":"User block options.","type":[[["BlockOptions"]],[["undefined"]]]}],"returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"True if the user was unblocked."},"meta":{"line":167,"file":"User.js","path":"dist/classes/users"}},{"name":"unblock","description":"Unblocks the given user. Requires the `user:manage:blocked_users` scope.","inherits":"User#unblock","inherited":true,"returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"True if the user was unblocked."},"meta":{"line":196,"file":"User.js","path":"dist/classes/users"}},{"name":"fetchBlocks","description":"Returns an array of users that are blocked by this user.","inherits":"User#fetchBlocks","inherited":true,"params":[{"name":"options","description":"Fetch options.","type":[[["BlocksFetchOptions"]],[["undefined"]]]}],"returns":{"types":[[["Promise","<"],["Array","<"],["User",">>"]]],"description":"An array of users that are blocked."},"meta":{"line":222,"file":"User.js","path":"dist/classes/users"}},{"name":"follow","description":"Follows a channel.","inherits":"User#follow","inherited":true,"params":[{"name":"channel","description":"Channel to follow.","type":[[["Channel"]],[["string"]]]}],"returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"True if the follow was successful."},"meta":{"line":251,"file":"User.js","path":"dist/classes/users"}},{"name":"unfollow","description":"Stops following a channel.","inherits":"User#unfollow","inherited":true,"params":[{"name":"channel","description":"Channel to stop following.","type":[[["Channel"]],[["string"]]]}],"returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"True if the unfollow was successful."},"meta":{"line":283,"file":"User.js","path":"dist/classes/users"}}],"meta":{"line":12,"file":"ClientUser.js","path":"dist/classes/users"}},{"name":"User","description":"Represents a user on Twitch.","extends":[[["Base"]]],"construct":{"name":"User","description":"Creates a user from the given client and","params":[{"name":"client","description":"Client that instantiated this user.","type":[[["Client"]]]},{"name":"data","description":"The raw data provided by the Twitch API.","type":[[["UserData"]]]}]},"props":[{"name":"client","description":"Client that instantiated this user.","readonly":true,"type":[[["Client"]]],"meta":{"line":30,"file":"User.js","path":"dist/classes/users"}},{"name":"id","description":"The user\'s ID.","readonly":true,"type":[[["string"]]],"meta":{"line":38,"file":"User.js","path":"dist/classes/users"}},{"name":"login","description":"The user\'s login name (username but all lowercase).","readonly":true,"type":[[["string"]]],"meta":{"line":46,"file":"User.js","path":"dist/classes/users"}},{"name":"displayName","description":"The user\'s display name.","readonly":true,"type":[[["string"]]],"meta":{"line":54,"file":"User.js","path":"dist/classes/users"}},{"name":"type","description":"The user\'s type (staff status).","readonly":true,"type":[[["string"]]],"meta":{"line":62,"file":"User.js","path":"dist/classes/users"}},{"name":"broadcasterType","description":"The user\'s broadcaster type (partner program).","readonly":true,"type":[[["string"]]],"meta":{"line":70,"file":"User.js","path":"dist/classes/users"}},{"name":"viewCount","description":"Total number of views on this user\'s channel.","readonly":true,"type":[[["number"]]],"meta":{"line":78,"file":"User.js","path":"dist/classes/users"}},{"name":"email","description":"Returns the email of the user (scope `user:read:email` is required).","readonly":true,"type":[[["string"]],[["undefined"]]],"meta":{"line":86,"file":"User.js","path":"dist/classes/users"}},{"name":"description","description":"The user\'s description.","readonly":true,"type":[[["string"]]],"meta":{"line":94,"file":"User.js","path":"dist/classes/users"}},{"name":"createdAt","description":"The Date object when the user was created.","readonly":true,"type":[[["Date"]]],"meta":{"line":105,"file":"User.js","path":"dist/classes/users"}},{"name":"createdTimestamp","description":"The unix timestamp when the user was created.","readonly":true,"type":[[["number"]]],"meta":{"line":113,"file":"User.js","path":"dist/classes/users"}}],"methods":[{"name":"avatarURL","description":"Returns the user\'s avatar URL.\\nIf `options.offline` is true, the offline avatar will be returned.","params":[{"name":"options","description":"Options for the avatar URL.","type":[[["AvatarURLOptions"]]]}],"returns":{"types":[[["string"]]],"description":"The user\'s avatar URL."},"meta":{"line":122,"file":"User.js","path":"dist/classes/users"}},{"name":"update","description":"Updates this user object to hold the newest data.","returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"True if the update was successful."},"meta":{"line":129,"file":"User.js","path":"dist/classes/users"}},{"name":"block","description":"Blocks the user. Requires the `user:manage:blocked_users` scope.","params":[{"name":"options","description":"User block options.","type":[[["BlockOptions"]],[["undefined"]]]}],"returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"True if the user was unblocked."},"meta":{"line":167,"file":"User.js","path":"dist/classes/users"}},{"name":"unblock","description":"Unblocks the given user. Requires the `user:manage:blocked_users` scope.","returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"True if the user was unblocked."},"meta":{"line":196,"file":"User.js","path":"dist/classes/users"}},{"name":"fetchBlocks","description":"Returns an array of users that are blocked by this user.","params":[{"name":"options","description":"Fetch options.","type":[[["BlocksFetchOptions"]],[["undefined"]]]}],"returns":{"types":[[["Promise","<"],["Array","<"],["User",">>"]]],"description":"An array of users that are blocked."},"meta":{"line":222,"file":"User.js","path":"dist/classes/users"}},{"name":"follow","description":"Follows a channel.","params":[{"name":"channel","description":"Channel to follow.","type":[[["Channel"]],[["string"]]]}],"returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"True if the follow was successful."},"meta":{"line":251,"file":"User.js","path":"dist/classes/users"}},{"name":"unfollow","description":"Stops following a channel.","params":[{"name":"channel","description":"Channel to stop following.","type":[[["Channel"]],[["string"]]]}],"returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"True if the unfollow was successful."},"meta":{"line":283,"file":"User.js","path":"dist/classes/users"}}],"meta":{"line":15,"file":"User.js","path":"dist/classes/users"}},{"name":"UserManager","description":"Manages the client\'s users.","extends":[[["Manager","<"],["User",">"]]],"construct":{"name":"UserManager","description":"Constructs a new user manager.","params":[{"name":"client","description":"The client that insantiated this manager.","type":[[["Client"]]]}]},"props":[{"name":"client","description":"The client that insantiated this manager.","readonly":true,"type":[[["Client"]]],"meta":{"line":40,"file":"UserManager.js","path":"dist/classes/users"}}],"methods":[{"name":"fetch","description":"Fetch for users from the API with IDs or logins.","params":[{"name":"query","description":"Query for users on Twitch.","type":[[["string"]],[["object"]]]},{"name":"options","description":"Fetch options.","type":[[["UserFetchOptions"]],[["undefined"]]]}],"returns":{"types":[[["Promise","<("],["User","|"],["undefined",")>"]],[["Promise","<"],["Collection","<"],["string",", "],["User",">>"]]],"description":"The fetched users."},"meta":{"line":48,"file":"UserManager.js","path":"dist/classes/users"}}],"meta":{"line":15,"file":"UserManager.js","path":"dist/classes/users"}}],"interfaces":[],"typedefs":[{"name":"CacheOptions","description":"Options to configure the cache.","type":[[["object"]]],"props":[{"name":"update","description":"How long in milliseconds until each update.","type":[[["number"]]]},{"name":"ttl","description":"How long the entity will last in the cache.","type":[[["number"]]]}],"meta":{"line":126,"file":"Cache.js","path":"dist/base"}},{"name":"SetEmoteData","type":[[["ChannelEmoteData"]]],"props":[{"name":"owner_id","type":[[["string"]]]}],"meta":{"line":90,"file":"ChannelEmoteSet.js","path":"dist/classes/channels"}},{"name":"AvatarURLOptions","description":"Options to retrieve an avatar url.","type":[[["object"]]],"props":[{"name":"offline","description":"Fetch offline avatar instead.","type":[[["boolean"]],[["undefined"]]]}],"meta":{"line":308,"file":"User.js","path":"dist/classes/users"}},{"name":"BlockOptions","description":"Options for blocking a user.","type":[[["object"]]],"props":[{"name":"reason","description":"Reason for the block.","type":[[["string"]],[["undefined"]]]},{"name":"sourceContext","description":"Context for the block.","type":[[["string"]],[["undefined"]]]}],"meta":{"line":313,"file":"User.js","path":"dist/classes/users"}},{"name":"BlocksFetchOptions","description":"Options for fetching blocks.","type":[[["object"]]],"props":[{"name":"first","description":"Offset the first result.","type":[[["number"]],[["undefined"]]]},{"name":"after","description":"After this date represented as a string.","type":[[["string"]],[["undefined"]]]}],"meta":{"line":319,"file":"User.js","path":"dist/classes/users"}},{"name":"UserFetchOptions","type":[[["object"]]],"props":[{"name":"type","description":"Either \\"id\\" or \\"login\\".","type":[[["string"]],[["undefined"]]]},{"name":"force","description":"Skip cache check and request directly from the API.","type":[[["string"]],[["undefined"]]]}],"meta":{"line":145,"file":"UserManager.js","path":"dist/classes/users"}},{"name":"ClientUpdateOptions","type":[[["object"]]],"props":[{"name":"users","type":[[["boolean"]],[["number"]],[["undefined"]]]},{"name":"channels","type":[[["boolean"]],[["number"]],[["undefined"]]]},{"name":"emotes","type":[[["boolean"]],[["number"]],[["undefined"]]]},{"name":"channelEmotes","type":[[["boolean"]],[["number"]],[["undefined"]]]},{"name":"channelRewards","type":[[["boolean"]],[["number"]],[["undefined"]]]}],"meta":{"line":3,"file":"client.js","path":"dist/types/base"}},{"name":"ClientTTLOptions","type":[[["object"]]],"props":[{"name":"users","type":[[["number"]],[["undefined"]]]},{"name":"channels","type":[[["number"]],[["undefined"]]]},{"name":"emotes","type":[[["number"]],[["undefined"]]]},{"name":"channelEmotes","type":[[["number"]],[["undefined"]]]},{"name":"channelRewards","type":[[["number"]],[["undefined"]]]}],"meta":{"line":11,"file":"client.js","path":"dist/types/base"}},{"name":"ClientOptions","type":[[["object"]]],"props":[{"name":"clientId","type":[[["string"]]]},{"name":"clientSecret","type":[[["string"]]]},{"name":"redirectUri","type":[[["string"]],[["undefined"]]]},{"name":"forceVerify","type":[[["string"]],[["undefined"]]]},{"name":"state","type":[[["string"]],[["undefined"]]]},{"name":"scope","type":[[["Array","<"],["string",">"]],[["undefined"]]]},{"name":"update","type":[[["ClientUpdateOptions"]]]},{"name":"ttl","type":[[["ClientTTLOptions"]]]},{"name":"debug","type":[[["boolean"]],[["undefined"]]]},{"name":"suppressRejections","type":[[["boolean"]],[["undefined"]]]}],"meta":{"line":19,"file":"client.js","path":"dist/types/base"}},{"name":"ChannelData","type":[[["object"]]],"props":[{"name":"broadcaster_id","type":[[["string"]]]},{"name":"broadcaster_name","type":[[["string"]]]},{"name":"game_name","type":[[["string"]]]},{"name":"game_id","type":[[["string"]]]},{"name":"broadcaster_language","type":[[["string"]]]},{"name":"title","type":[[["string"]]]},{"name":"delay","type":[[["number"]]]}],"meta":{"line":3,"file":"channel.js","path":"dist/types/classes"}},{"name":"ChannelEmoteData","type":[[["EmoteData"]]],"props":[{"name":"tier","type":[[["string"]]]},{"name":"emote_type","type":[[["string"]]]},{"name":"emote_set_id","type":[[["string"]]]}],"meta":{"line":3,"file":"channelEmote.js","path":"dist/types/classes"}},{"name":"EmoteDataImages","type":[[["object"]]],"props":[{"name":"url_1x","description":"Emote\'s 1x image version.","type":[[["string"]]]},{"name":"url_2x","description":"Emote\'s 2x image version.","type":[[["string"]]]},{"name":"url_4x","description":"Emote\'s 4x image version.","type":[[["string"]]]}],"meta":{"line":3,"file":"emote.js","path":"dist/types/classes"}},{"name":"EmoteData","type":[[["object"]]],"props":[{"name":"id","description":"Emote\'s id.","type":[[["string"]]]},{"name":"name","description":"Emote\'s name.","type":[[["string"]]]},{"name":"images","description":"Emote\'s images.","type":[[["EmoteDataImages"]]]}],"meta":{"line":9,"file":"emote.js","path":"dist/types/classes"}},{"name":"UserData","type":[[["object"]]],"props":[{"name":"id","description":"User\'s id.","type":[[["string"]]]},{"name":"login","description":"User\'s login.","type":[[["string"]]]},{"name":"display_name","description":"User\'s display name.","type":[[["string"]]]},{"name":"type","description":"User\'s type.","type":[[["string"]]]},{"name":"broadcaster_type","description":"User\'s broadcast type.","type":[[["string"]]]},{"name":"description","description":"User\'s description.","type":[[["string"]]]},{"name":"profile_image_url","description":"User\'s profile picture URL.","type":[[["string"]]]},{"name":"offline_image_url","description":"User\'s offline profile picure URL.","type":[[["string"]]]},{"name":"view_count","description":"User\'s view count.","type":[[["number"]]]},{"name":"email","description":"User\'s email.","type":[[["string"]],[["undefined"]]]},{"name":"created_at","description":"User\'s unix timestamp of when they joined Twitch.","type":[[["string"]]]}],"meta":{"line":3,"file":"user.js","path":"dist/types/classes"}},{"name":"PubSubOptions","description":"Options for Twitch\'s PubSub feature.","type":[[["object"]]],"props":[{"name":"suppressRejections","description":"Suppresses any rejections coming from the PubSub instance.","type":[[["boolean"]],[["undefined"]]]},{"name":"ws","description":"Options for the websocket.","type":[[["WebSocketClientOptions"]],[["undefined"]]]}],"meta":{"line":3,"file":"index.js","path":"dist/types/pubsub"}}],"externals":[{"name":"Collection","description":"An extended map with utility methods.","see":["https://github.com/discordjs/collection/blob/master/src/index.ts#L15"],"meta":{"line":8,"file":"index.js","path":"dist/types/classes"}},{"name":"WebSocketClientOptions","description":"Options for the websocket.","see":["https://github.com/DefinitelyTyped/DefinitelyTyped/blob/69e29e847155bd4d845497319116281cb5a384a3/types/ws/index.d.ts#L171-L187"],"meta":{"line":9,"file":"index.js","path":"dist/types/pubsub"}}]}')}},[[337,1,2]]]);
//# sourceMappingURL=main.dce7c268.chunk.js.map